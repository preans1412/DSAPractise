/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSubtree(TreeNode root, TreeNode subRoot)
     {
       if(root != null && subRoot != null) return same(root, subRoot) || (isSubtree(root.left, subRoot) || isSubtree(root.right, subRoot));
        else if(root != null || subRoot != null) return false;
        else return true;    
    }
     private boolean same(TreeNode root, TreeNode subRoot){
        if(root != null && subRoot != null) return root.val == subRoot.val && same(root.left, subRoot.left) && same(root.right, subRoot.right);
        else if(root != null || subRoot != null) return false;
        else return true;
    }
}
